<?php
// $Id$

/**
 * @file
 * Video Consultation Integration Module : Installation
 */

/**
 * Implements hook_install().
 */
function vconsult_install() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.
  // drupal_install_schema('vconsult')
	error_reporting(0);

	$form_state=array();
	$form_state['values']=array();
	drupal_form_submit('vconsult_admini', $form_state);
	unset($_SESSION['messages']['status']);
	vwrooms_crsetup('vconsult');
	$tag='room_tag';

	$field = array(
		'field_name' => 'field_vwroomstags',
		      'type' => 'taxonomy_term_reference',
	'cardinality'=>FIELD_CARDINALITY_UNLIMITED,

		      'settings' => array(
		'allowed_values' => array(
	array(
		'vocabulary' => $tag,
		            'parent' => 0
	),
	),
	),
	);
	try{
		field_create_field($field);
	}catch(Exception $e){
	}
	try{

		$instance = array(
		'field_name' => 'field_vwroomstags',
		'entity_type' => 'node',
		        'label' => 'Room Tags',
		        'bundle' => 'vconsult',
		'required' =>false,
		        'widget' => array(
		'type' => 'taxonomy_autocomplete'
		),
		'display' => array(
		'default' => array('type' => 'hidden'),
		            'teaser' => array('type' => 'hidden')
		)
		);

		field_create_instance($instance);

	}catch(Exception $e){
	}
}

/**
 * Implements hook_uninstall().
 */
function vconsult_uninstall() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.
  // drupal_uninstall_schema('vconsult')

  db_query("delete from {variable} where name like 'vconsult_%'");


  //fetch the nodes we want to delete
  $result = db_query("SELECT nid FROM {node} WHERE type='vconsult'");

  while ($row = $result->fetchAssoc()){
  	node_delete($row['nid']);
  	$deleted_count+=1;
  }
}

/**
 * Implements hook_schema().
 *
 * @return array of Schema API table definitions.
 */
function vconsult_schema() {
  $schema['vconsult_rooms'] = array(
    'fields' => array(
      'vid' => array('type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "Room ID",
      ),
      'nid' => array('type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "Node ID",
      ),
      'timecreated' => array('type' => 'int', 'not null' => TRUE, 'default' => 0,
        'description' => "Created Timestamp (Unix Timestamp, which is limited to values above Jan 1, 1970)",
      ),
      'timelastaccess' => array('type' => 'int', 'not null' => TRUE, 'default' => 0,
        'description' => "Last Access Timestamp (Unix Timestamp, which is limited to values above Jan 1, 1970)",
      ),
      'timeexpire' => array('type' => 'int', 'not null' => TRUE, 'default' => 0,
        'description' => "Expiration Timestamp (Unix Timestamp, which is limited to values above Jan 1, 1970)",
      ),
      'timeout' => array('type' => 'int', 'not null' => TRUE, 'default' => 0,
        'description' => "Clean if not used",
      ),
      'credits' => array('type' => 'int', 'not null' => TRUE, 'default' => 0,
        'description' => "Available time in minutes",
      ),
      'timeused' => array('type' => 'int', 'size' => 'big', 'not null' => TRUE, 'default' => 0,
        'description' => "How long was this used for",
      ),
      'welcome' => array('type' => 'text', 'not null' => FALSE,
        // NOTE:  On MySQL, text fields cannot have default values.
        'description' => "Room welcome message.",
      ),
      'background_url' => array('type' => 'text', 'not null' => FALSE,
        // NOTE:  On MySQL, text fields cannot have default values.
        'description' => "Room background_url.",
      ),
      'layoutcode' => array('type' => 'text', 'not null' => FALSE,
        // NOTE:  On MySQL, text fields cannot have default values.
        'description' => "Room layoutcode.",
      ),
      'room' => array('type' => 'varchar', 'length' => '64', 'not null' => FALSE,
        'description' => "Room name.",
      ),
      'camwidth' => array(
        'description' => 'Camera resolution width',
        'type' => 'int',
        'size' => "small",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 320,
      ),
      'camheight' => array(
        'description' => 'Camera resolution height',
        'type' => 'int',
        'size' => "small",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 240,
      ),
      'camfps' => array(
        'description' => 'Camera frames per second',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 15,
      ),
      'micrate' => array(
        'description' => 'Micrate',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 22,
      ),
      'bandwidth' => array(
        'description' => 'Default bandwidth per stream',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 40960,
      ),
      'maxbandwidth' => array(
        'description' => 'Maximum bandwidth per stream',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 81920,
      ),
      'visitors' => array(
        'description' => 'Allow visitors',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'filterregex' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE,
        'description' => "Filter regex.",
        'default' => "(?i)(fuck|cunt)(?-i)",
      ),
      'filterreplace' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE,
        'description' => "Filter replace.",
        'default' => " ** ",
      ),
      'room_limit' => array(
        'description' => 'Verbose level',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 50,
      ),
      'floodprotection' => array(
        'description' => 'floodprotection',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 3,
      ),
      'fillwindow' => array(
        'description' => 'fillwindow',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'regularcams' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'regularwatch' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'privatetextchat' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'change_background' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'files_enabled' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'enabledvideo' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'enabledsound' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'configuresource' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'showcamsettings' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'advancedcamsettings' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'file_upload' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'file_delete' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'chat_enabled' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'users_enabled' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'write_text' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'slideshow' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
			'publicvideosadd' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      			'publicvideomax' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      			'publicvideon' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
            			'publicvideowidth' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),

            			'publicvideoheight' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
                  			'publicvideorow' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
        			'publicvideocol' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
                  			'publicvideox' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),

                  			'publicvideoy' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),





			'externalstream' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),


         'disablead' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    'users' => array(
      'description' => 'users',
      'type' => 'text',
      'not null' => false,
    ),
    'moderators' => array(
      'description' => 'moderators',
      'type' => 'text',
      'not null' => false,
    ),

  'autoplaystream' => array(
        'description' => 'autoplaystream',
        'type' => 'text',

        'not null' => false,
  ),
  'autoplayserver' => array(
          'description' => 'autoplayserver',
          'type' => 'text',
          'not null' => false,
  )


    ),
    'indexes' => array(
      'timelastaccess' => array('timelastaccess'),
      'room' => array('room'),
      'nid' => array('nid'),
    ),
    'primary key' => array('vid', 'nid'),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function vconsult_requirements($phase) {
  $requirements = array();
  $t = get_t();

  // Ensure translations don't break at install time
  $t = get_t();

  // Report Drupal version
  if ($phase == 'update') {

    if (!variable_get('vwrooms_saved', 0)) {
      $requirements['drupalvw'] = array(
        'description' => t('Video Consultation module not installed. Videowhisper Rooms needs to be installed first. Please  reinstall this module.'),
        'severity' => REQUIREMENT_ERROR,
  		);
    }

    return $requirements;
  }
  if ($phase != 'runtime') {
    return $requirements;
  }

  if ($phase == 'runtime') {

    $path = variable_get('vconsult_path', "/vconsult/");

    if (!file_exists("." . $path)) {
      $requirements['vconsult_arr'] = array(
        'title' => $t('VideoWhisper Video Consultation'),
        'value' => $t('Not found'),
        'description' => $t('Please <a target="_blank" href="http://www.videowhisper.com/?p=Drupal+2+Way+Video+Chat+Module">download Video Consultation application</a> and upload it in: ') . $path,
        'severity' => REQUIREMENT_ERROR,
      );
    }

    if (!user_access('access video consultation room', drupal_anonymous_user())) {
      $requirements['vconsult_access'] = array(
        'title' => $t('Video Consultation anonymous access'),
        'value' => $t('Access denied'),
        'description' => $t('Invited parties (that could be anonymous users) cannot currently access chat rooms. Please assign the "access video consultation" permission to the anonymous user role.'),
        'severity' => REQUIREMENT_WARNING,
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_enable().
 */
function vconsult_enable() {
	db_query("REPLACE INTO {role_permission} SET permission =  'access video consultation room' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'access video consultation room' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'create video consultation room' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit video consultation room' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'delete video consultation room' ,module='vconsult', rid = '2';");

	db_query("REPLACE INTO {role_permission} SET permission =  'edit welcome message' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit instantaccess' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit credits' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit cleanup' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit availability' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit bandwidth' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit maxbandwidth' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit filterregex' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit filterreplace' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit micrate' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit camfps' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit camheight' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit camwidth' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit room_limit' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit floodprotection' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit fillwindow' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit layoutcode' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit background_url' ,module='vconsult', rid = '2';");

	db_query("REPLACE INTO {role_permission} SET permission =  'edit privatetextchat' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit change_background' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit files_enabled' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit file_upload' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit file_delete' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit chat_enabled' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit users_enabled' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit write_text' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit enabledvideo' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit enabledsound' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit configuresource' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit showcamsettings' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit regularcams' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit regularwatch' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit slideshow' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit advancedcamsettings' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit publicvideosadd' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'edit externalstream' ,module='vconsult', rid = '2';");

	db_query("REPLACE INTO {role_permission} SET permission =  'use externalstream' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use publicvideosadd' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use privatetextchat' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use change_background' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use files_enabled' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use file_delete' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use file_upload' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use chat_enabled' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use users_enabled' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use enabledvideo' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use enabledsound' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use configuresource' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use showcamsettings' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use write_text' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use regularcams' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use regularwatch' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use slideshow' ,module='vconsult', rid = '2';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use advancedcamsettings' ,module='vconsult', rid = '2';");

	db_query("REPLACE INTO {role_permission} SET permission =  'use externalstream' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use publicvideosadd' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use privatetextchat' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use change_background' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use files_enabled' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use file_delete' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use file_upload' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use chat_enabled' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use users_enabled' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use enabledvideo' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use enabledsound' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use configuresource' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use showcamsettings' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use write_text' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use regularcams' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use regularwatch' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use slideshow' ,module='vconsult', rid = '1';");
	db_query("REPLACE INTO {role_permission} SET permission =  'use advancedcamsettings' ,module='vconsult', rid = '1';");
}

function vconsult_admini($form, &$form_state) {
	$form = array();

	$form['vconsult_rtmp3'] = array(
    '#type' => 'textfield',
    '#title' => t('RTMP application address'),
    '#default_value' => variable_get('vconsult_rtmp3', "rtmp://server-domain-or-ip/videowhisper"),
    '#size' => 48,
    '#maxlength' => 255,
    '#description' => t("RTMP application address on a rtmp server."),
    '#required' => TRUE,
	);


	if (module_exists('vwcredits')) {




		$form['vconsult_paidrtmp3'] = array(
    '#type' => 'textfield',
    '#title' => t('RTMP application address for Paid Rooms'),
    '#default_value' => variable_get('consult_paidrtmp3', ""),
    '#size' => 48,
    '#maxlength' => 255,
    '#description' => t('Separate RTMP application address on a rtmp server for paid rooms. Leave blank to use the same.'),
    '#required' => false,
		);



	}





	$form['vconsult_amf3'] = array(
    '#type' => 'textfield',
    '#title' => t('RTMP AMF'),
    '#default_value' => variable_get('vconsult_amf3', "AMF3"),
    '#size' => 48,
    '#maxlength' => 10,
    '#description' => t("RTMP AMF (AMF3 : Red5, Wowza, FMIS3, FMIS3.5)"),
    '#required' => TRUE,
	);




	$form['vconsult_rtmfp'] = array(
  '#type' => 'textfield',
  '#title' => t('RTMFP application address'),
        '#default_value' => variable_get('vconsult_rtmfp', "rtmfp://stratus.adobe.com/f1533cc06e4de4b56399b10d-1a624022ff71/"),
        '#size' => 48,
        '#maxlength' => 255,
  '#description' => t('RTMFP application address on a rtmp server. See <a href="http://www.videowhisper.com/?p=Requirements" target="_blank">Requirements</a> if you need more details about this.'),
        '#required' => TRUE,
	);
	$form['vconsult_sgroup'] = array(
          '#type' => 'textfield',
          '#title' => t('ServerGroup'),
          '#default_value' => variable_get('vconsult_sgroup', "VideoWhisper"),
          '#size' => 48,
          '#maxlength' => 255,
          '#description' => t('Server Group.'),
          '#required' => TRUE,
	);


	$form['vconsult_room_prefix3'] = array(
    '#type' => 'textfield',
    '#title' => t('Default room name'),
    '#default_value' => variable_get('vconsult_room_prefix3', "InstantRoom"),
    '#size' => 24,
    '#maxlength' => 48,
    '#description' => t("Default room name. A hash code is added if not changed by room creator."),
    '#required' => TRUE,
	);

	$found = "";
	$path = variable_get('vconsult_path', "/" . drupal_get_path("module", "vconsult") . "/" . "vconsult" . "/");
	if (file_exists("." . $path)) {
		$found = t('Application folder detected: ') . $path;
	}
	else {
		$found = t('Please <a target="_blank" href="@url-download">download Video Consultation application</a>. Application folder NOT detected: %path', array('@url-download' => 'http://www.videowhisper.com/?p=PHP+Video+Consultation', '%path' => $path));
	}
	variable_del('vconsult_path');
/*
	$form['vconsult_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Video Consultation path'),
    '#default_value' => variable_get('vconsult_path', "/" . drupal_get_path("module", "vconsult") . "/" . "vconsult" . "/"),
    '#size' => 58,
    '#maxlength' => 58,
    '#description' => t("Path for the Video Consultation application folder.") . " " . $found,
    '#required' => TRUE,
	);*/

	$form['vconsult_cammaxbandwidth3'] = array(
    '#type' => 'textfield',
    '#title' => t('camMaxBandwidth'),
    '#default_value' => variable_get('vconsult_cammaxbandwidth3', "131072"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set camMaxBandwidth parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_bufferlive3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferLive'),
    '#default_value' => variable_get('vconsult_bufferlive3', "0.5"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferLive parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_bufferfull3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferFull'),
    '#default_value' => variable_get('vconsult_bufferfull3', "0.5"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferFull parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_bufferliveplayback3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferLivePlayback'),
    '#default_value' => variable_get('vconsult_bufferliveplayback3', "0.2"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferLivePlayback parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_bufferfullplayback3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferFullPlayback'),
    '#default_value' => variable_get('vconsult_bufferfullplayback3', "0.5"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferFullPlayback parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_disableuploaddetection3'] = array(
    '#type' => 'radios',
    '#title' => t('disableUploadDetection'),
    '#default_value' => variable_get('vconsult_disableuploaddetection3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set disableUploadDetection parameters'),
	);

	$form['vconsult_disablebandwidthdetection3'] = array(
    '#type' => 'radios',
    '#title' => t('disableBandwidthDetection'),
    '#default_value' => variable_get('vconsult_disablebandwidthdetection3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set disableBandwidthDetection parameters'),
	);

	$form['vconsult_limitbybandwidth3'] = array(
    '#type' => 'radios',
    '#title' => t('limitBybandwidth'),
    '#default_value' => variable_get('vconsult_limitbybandwidth3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set limitBybandwidth parameters'),
	);

	$form['vconsult_fillwindow3'] = array(
    '#type' => 'radios',
    '#title' => t('fillwindow'),
    '#default_value' => variable_get('vconsult_fillwindow3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set fillwindow parameters'),
	);

	$form['vconsult_room_limit3'] = array(
    '#type' => 'textfield',
    '#title' => t('room_limit'),
    '#default_value' => variable_get('vconsult_room_limit3', "100"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set room_limit parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_floodprotection3'] = array(
    '#type' => 'textfield',
    '#title' => t('floodprotection'),
    '#default_value' => variable_get('vconsult_floodprotection3', "3"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set floodprotection parameters."),
    '#required' => TRUE,
	);

	$form['vconsult_layoutcode3'] = array(
    '#type' => 'textfield',
    '#title' => t('layoutcode'),
    '#default_value' => variable_get('vconsult_layoutcode3', ""),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set layoutcode parameters."),
	);

	$form['vconsult_background_url3'] = array(
    '#type' => 'textfield',
    '#title' => t('background_url'),
    '#default_value' => variable_get('vconsult_background_url3', "templates/consultation/background.jpg"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set background_url parameters."),
	);

	$form['vconsult_privatetextchat3'] = array(
    '#type' => 'radios',
    '#title' => t('privatetextchat'),
    '#default_value' => variable_get('vconsult_privatetextchat3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set privatetextchat parameters'),
	);

	$form['vconsult_change_background3'] = array(
    '#type' => 'radios',
    '#title' => t('change_background'),
    '#default_value' => variable_get('vconsult_change_background3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set change_background parameters'),
	);

	$form['vconsult_externalstream3'] = array(
    '#type' => 'radios',
    '#title' => t('externalstream'),
    '#default_value' => variable_get('vconsult_externalstream3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set externalstream parameters'),
	);

	$form['vconsult_publicvideosadd3'] = array(
    '#type' => 'radios',
    '#title' => t('publicvideosadd'),
    '#default_value' => variable_get('vconsult_publicvideosadd3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set publicvideosadd parameters'),
	);

	$form['vconsult_files_enabled3'] = array(
    '#type' => 'radios',
    '#title' => t('files_enabled'),
    '#default_value' => variable_get('vconsult_files_enabled3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set files_enabled parameters'),
	);

	$form['vconsult_file_upload3'] = array(
    '#type' => 'radios',
    '#title' => t('file_upload'),
    '#default_value' => variable_get('vconsult_file_upload3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set file_upload parameters'),
	);

	$form['vconsult_file_delete3'] = array(
    '#type' => 'radios',
    '#title' => t('file_delete'),
    '#default_value' => variable_get('vconsult_file_delete3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set file_delete parameters'),
	);

	$form['vconsult_chat_enabled3'] = array(
    '#type' => 'radios',
    '#title' => t('chat_enabled'),
    '#default_value' => variable_get('vconsult_chat_enabled3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set chat_enabled parameters'),
	);

	$form['vconsult_enabledvideo3'] = array(
    '#type' => 'radios',
    '#title' => t('enabledVideo'),
    '#default_value' => variable_get('vconsult_enabledvideo3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set enabledVideo parameters'),
	);

	$form['vconsult_enabledsound3'] = array(
    '#type' => 'radios',
    '#title' => t('enabledSound'),
    '#default_value' => variable_get('vconsult_enabledsound3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set enabledSound parameters'),
	);

	$form['vconsult_configuresource3'] = array(
    '#type' => 'radios',
    '#title' => t('configureSource'),
    '#default_value' => variable_get('vconsult_configuresource3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set configureSource parameters'),
	);

	$form['vconsult_advancedcamsettings3'] = array(
    '#type' => 'radios',
    '#title' => t('advancedcamsettings'),
    '#default_value' => variable_get('vconsult_advancedcamsettings3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set advancedcamsettings parameters'),
	);

	$form['vconsult_showcamsettings3'] = array(
    '#type' => 'radios',
    '#title' => t('showCamsettings'),
    '#default_value' => variable_get('vconsult_showcamsettings3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set showCamsettings parameters'),
	);

	$form['vconsult_users_enabled3'] = array(
    '#type' => 'radios',
    '#title' => t('users_enabled'),
    '#default_value' => variable_get('vconsult_users_enabled3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set users_enabled parameters'),
	);

	$form['vconsult_write_text3'] = array(
    '#type' => 'radios',
    '#title' => t('write_text'),
    '#default_value' => variable_get('vconsult_write_text3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set write_text parameters'),
	);

	$form['vconsult_regularcams3'] = array(
    '#type' => 'radios',
    '#title' => t('regularcams'),
    '#default_value' => variable_get('vconsult_regularcams3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set regularcams parameters'),
	);

	$form['vconsult_regularwatch3'] = array(
    '#type' => 'radios',
    '#title' => t('regularwatch'),
    '#default_value' => variable_get('vconsult_regularwatch3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set regularwatch parameters'),
	);

	$form['vconsult_slideshow3'] = array(
    '#type' => 'radios',
    '#title' => t('slideshow'),
    '#default_value' => variable_get('vconsult_slideshow3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set slideshow parameters'),
	);

	//paid and default



	///paidandefu




	$form['vconsult_autoplaystream'] = array(
  '#type' => 'textfield', '#default_value' => variable_get('vconsult_autoplaystream', ''),
  '#title' => t('AutoplayStream'),
  '#description' => t("Autoplaystream."),

	);


	$form['vconsult_autoplayserver'] = array(
  '#type' => 'textfield', '#default_value' => variable_get('vconsult_autoplayserver', ''),
  '#title' => t('Autoplay Server'),
  '#description' => t("Autoplay Server."),

	);













	$form['vconfig'] = array('#type' => 'fieldset', '#title' => t('Video Configurations'));
	$form['vconfig']['vconsult_publicvideon'] = array('#type' => 'textfield', '#title' => t('Initial panels'), '#default_value' => variable_get('vconsult_publicvideon', 3));
	$form['vconfig']['vconsult_publicvideomax'] = array('#type' => 'textfield', '#title' => t('Maximum number of panels'), '#default_value' => variable_get('vconsult_publicvideomax', 8));
	$form['vconfig']['vconsult_publicvideowidth'] = array('#type' => 'textfield', '#title' => t('Video Panel Width'), '#default_value' => variable_get('vconsult_publicvideowidth', 160));
	$form['vconfig']['vconsult_publicvideoheight'] = array('#type' => 'textfield', '#title' => t('Video Panel height'), '#default_value' => variable_get('vconsult_publicvideoheight', 100));
	$form['vconfig']['vconsult_publicvideocol'] = array('#type' => 'textfield', '#title' => t('Video Panel cols'), '#default_value' => variable_get('vconsult_publicvideocol', 2));
	$form['vconfig']['vconsult_publicvideorow'] = array('#type' => 'textfield', '#title' => t('Video Panel row'), '#default_value' => variable_get('vconsult_publicvideorow', 0));
	$form['vconfig']['vconsult_publicvideox'] = array('#type' => 'textfield', '#title' => t('Video Panel x'), '#default_value' => variable_get('vconsult_publicvideox', 100));
	$form['vconfig']['vconsult_publicvideoy'] = array('#type' => 'textfield', '#title' => t('Video Panel y'), '#default_value' => variable_get('vconsult_publicvideoy', 100));



	$form['fre'] = array('#type' => 'fieldset', '#title' => t('Additional free mode settings'), '#collapsible' => true, '#collapsed' => true);
	$options = implode(",", array("320x240" => "320x240", "160x120" => "160x120", "176x144" => "176x144"));

	$form['fre']['vconsult_defaultresolution'] = array(
  '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultresolution', $options),
  '#title' => t('Resolutions'),
  '#description' => t('Comma separated camera resoluton  list: 320X240,160X120,176X144,352X288,640X480 *'),

	);

	$form['fre']['vconsult_defaultresolutiond'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultresolutiond', '176x144'),
    '#title' => t('Default Resolution'),
	'#options' => array("320x240" => "320x240", "160x120" => "160x120", "176x144" => "176x144"),
	);


	$options = implode(",", array("15" => "15", "10" => "10", "12" => "12", "20" => "20"));

	$form['fre']['vconsult_defaultcamfps'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultcamfps', $options),
    '#title' => t('Camera FPS'),
    '#description' => t('Comma separated camera frames per second list list :15,10,12,20,25,30 *'),

	);

	$form['fre']['vconsult_defaultcamfpsd'] = array(
      '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultcamfpsd', '20'),
      	'#options' => array("15" => "15", "10" => "10", "12" => "12", "20" => "20"),
      '#title' => t('Default Camera FPS'),

	);

	$options = implode(",", array("22" => "22", "11" => "11"));


	$form['fre']['vconsult_defaultmicrate'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultmicrate', $options),
    '#title' => t('Micrates'),
    '#description' => t('Comma separated  list : 22,11,44,48 *'),

	);

	$form['fre']['vconsult_defaultmicrated'] = array(
      '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultmicrated', '22'),
      '#title' => t('Default Micrate'),
      '#options' => array("22" => "22", "11" => "11"),

	);



	$form['fre']['vconsult_defaultbandwidth'] = array(
  '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultbandwidth', '50000'),
  '#title' => t('Bandwidth'),
    '#description' => t("Default bandwidth per video stream in bytes per second. "),
  '#size' => '6',
  '#maxlength' => 8,

	);

	$form['fre']['vconsult_defaultmaxbandwidth'] = array(
  '#type' => 'textfield', '#default_value' => variable_get('vconsult_defaultmaxbandwidth', '100000'),
  '#title' => t('Max Bandwidth'),
    '#description' => t("Maximum bandwidth per video stream in bytes per second."),
   '#size' => '6',
    '#maxlength' => 8,
	);




	if (module_exists('vwcredits')) {

		$form['paid'] = array('#type' => 'fieldset', '#collapsible' => true, '#collapsed' => true, '#title' => t('Additional Settings for paid mode'));

		$options = implode(",", array("320x240" => "320x240", "160x120" => "160x120", "176x144" => "176x144", '352x288' => '352x288', '640x480' => '640x480' ));

		$form[paid]['vconsult_paidresolution'] = array(
  	  '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidresolution', $options),
  	  '#title' => t('Resolutions'),
  	  '#description' => t('Comma separated camera resolution list for paid rooms *'),
  	  '#maxlength' => 80,

		);

		$form[paid]['vconsult_paidresolutiond'] = array(
  	  	  '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidresolutiond', '640x480'),
  	  	  '#title' => t('Default Resolution'),
  	  	  	'#options' => array("320x240" => "320x240", "160x120" => "160x120", "176x144" => "176x144", '352x288' => '352x288', '640x480' => '640x480' ),
  	  	  '#maxlength' => 80,

		);


		$options = implode(",", array("15" => "15", "10" => "10", "12" => "12", "20" => "20", "25" => "25", "30" => "30"));




		$form['paid']['vconsult_paidcamfps'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidcamfps', $options),
    '#title' => t('Camera FPS'),
    '#description' => t('Comma separated camera frames per second list for paid rooms *'),
     	'#size' => '60',
    '#maxlength' => 80,

		);

		$form['paid']['vconsult_paidcamfpsd'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidcamfpsd', '30'),
    '#title' => t('Default Camera FPS'),
    '#options' => array("15" => "15", "10" => "10", "12" => "12", "20" => "20", "25" => "25", "30" => "30"),
    '#maxlength' => 80,

		);

		$options = implode(",", array("22" => "22", "11" => "11", "44" => "44", "48" => "48"));

		$form['paid']['vconsult_paidmicrate'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidmicrate', $options),
    '#title' => t('Micrates'),
    '#description' => t('Comma separated  list of micrate for paid rooms *'),
    	'#size' => '60',
    '#maxlength' => 80,

		);


		$form['paid']['vconsult_paidmicrated'] = array(
  '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidmicrated', '48'),
  '#title' => t('Default Micrate'),
  '#options' => array("22" => "22", "11" => "11", "44" => "44", "48" => "48"),
      '#maxlength' => 80,

		);



		$form['paid']['vconsult_paidbandwidth'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidbandwidth', '70000'),
    '#title' => t('Bandwidth'),
    '#description' => t("Default bandwidth per video stream in bytes per second for paid rooms."),
    	'#size' => '6',
    '#maxlength' => 8,

		);
		$form['paid']['vconsult_paidmaxbandwidth'] = array(
    '#type' => 'textfield', '#default_value' => variable_get('vconsult_paidmaxbandwidth', '200000'),
    '#title' => t('Max. Bandwidth'),
    '#description' => t("Maximum bandwidth per video stream in bytes per second for paid rooms."),
  	'#size' => '6',
    '#maxlength' => 8,

		);


	}



	return system_settings_form($form);
}



if(!function_exists('vwrooms_crsetup')){


	function vwrooms_crsetup($type){
		if(!module_exists('vwcredits'))
		return;
		$t=$type;

		$form['f_' . $type]["vwcredits_{$t}_idletime"] = array(
	'#type' => 'textfield', '#size' => 20, '#title' => t('Transfer apply interval'), '#default_value' => variable_get("vwcredits_{$t}_idletime", '60'), '#description' => t('after x seconds pending transactions will be applied'));


		$form['f_' . $type]["vwcredits_{$t}_mm"] = array(
	'#type' => 'select', '#title' => t('Module Mode'), '#descriptions' => t('Module mode'), '#default_value' => variable_get("vwcredits_{$t}_mm", 'User')
		, '#options' => array('Free' => t('Free'), 'Paid' => t('Paid'), 'User' => t('As configured by room owner.'))
		);


		$form['f_' . $type]["vwcredits_{$t}_defaultgracetime"] = array(
	'#type' => 'textfield', '#size' => 20, '#title' => t('Grace Period'), '#descriptions' => t('Grace Period'), '#default_value' => variable_get("vwcredits_{$t}_defaultgracetime", '30')
		, '#description' => t('In seconds')
		);

		$form['f_' . $type]["vwcredits_{$t}_maxgracetime"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Max Grace Period'), '#descriptions' => t('When owner can change'), '#default_value' => variable_get("vwcredits_{$t}_maxgracetime", '300')
		, '#description' => t('In seconds')

		);
		$form['f_' . $type]["vwcredits_{$t}_mingracetime"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Min Grace Period'), '#descriptions' => t('When owner can change'), '#default_value' => variable_get("vwcredits_{$t}_mingracetime", '0')
		, '#description' => t('In seconds')

		);



		$form['f_' . $type]["vwcredits_{$t}_ownerscost"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Room Owner\'s cost'), '#default_value' => variable_get("vwcredits_{$t}_ownerscost", '0.1')

		);

		$form['f_' . $type]["vwcredits_{$t}_ownersroomcost"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Cost of using own room'), '#default_value' => variable_get("vwcredits_{$t}_ownersroomcost", '0.1')

		);

		$form['f_' . $type]["vwcredits_{$t}_roomcost"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('User Cost'), '#default_value' => variable_get("vwcredits_{$t}_roomcost", '4.0')
		);

		$form['f_' . $type]["vwcredits_{$t}_maxroomcost"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Max User Cost'), '#description' => t('When room owner can set'), '#default_value' => variable_get("vwcredits_{$t}_maxroomcost", '10')
		);

		$form['f_' . $type]["vwcredits_{$t}_minroomcost"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Min User Cost'), '#description' => t('When room owner can set'), '#default_value' => variable_get("vwcredits_{$t}_minroomcost", '0.0')
		);

		$form['f_' . $type]["vwcredits_{$t}_ownersgain"] = array(
		'#type' => 'textfield', '#size' => 20, '#title' => t('Owner\'s gain'), '#default_value' => variable_get("vwcredits_{$t}_ownersgain", '0.75')
		, '#description' => t('within 0-1'));

		$arr=	    $form['f_' . $type];
		foreach ($arr as $nm => $v) {
			$value = $v['#default_value'];

			variable_set($nm, $value);

		}





	}
}
